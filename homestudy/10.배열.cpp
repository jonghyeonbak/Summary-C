배열 array
둘 이상의 변수를 모아 놓은 것이다.
다수의 데이터를 저장하고 처리하는 경우 유리하게 사용가능하다.

1차원 배열의 선언에 필요한 요소 3가지.
배열이름, 자료형, 길이정보
int    oneDimArr[4];     길이가 4인 int형 1차원 배열 oneDimArr
자료형 배열명[요소 개수]
@1차원 배열의 접근
int arr[3];  길이가 3인 int형 1차원 배열
arr[0] = 10; 배열 arr의 첫 번째 요소에 10을 저장하라.

배열 요소 element
배열의 나누어진 조각을 뜻함.

배열의 위치 정보를 명시하는 인덱스 값은 1이 아닌 0에서부터 시작한다.
[] 연산자 사이에 배열의 위치정보를 명시하게 디는데 이 위치에 들어가는 숫자를 가르켜 '인덱스' 혹은 '인덱스 값'이라 부른다.

배열의 모든 요소는 반복문을 이용해 순차적으로 접근이 가능하다.

@배열 선언과 동시에 초기화
int iArr[3] = { 1,2,3 };
int arr2[] = { 1,2,3,4,5 };  컴파일러에 의해 자동으로 5가 삽입된다.
int arr3[5] = { 1,2,3 } 4, 5번째 배열요소는 으로 채워진다.

배열의 이름을 대상으로 하는 sizeof 연산의 결과는 '바이트 단위의 배열크기'가 반환된다.

배열은 선언할 때만 한 번에 초기화 가능하다.

@문자열 변수의 표현
char str[14] = "Good Morning!";

메모리에는 good morning!\0까지 저장된다.
문자열의 끝에는 NULL(\0)문자가 들어간다.
scanf 함수호출을 통해서 입력 받은 문자열의 끝에도 널 문자가 삽입된다.

ex) char arr1[] = { 'H','i', '~' };   널 문자가 없기 때문에 문자 배열이다.
ex) char arr2[] = { 'H', 'i', '~', '\0' };  문자열이다.
문자열의 끝에는 널 문자가 삽입되기 때문에, 문자열 중간에 널 문자를 삽입하면 문자열의 끝을 변경할 수 있다.

문자열 끝에 널 문자를 저장하기 위해 배열 요소 개수 1개를 더해준다.
int arr[5] = "apple";->xx
int arr[6] = "apple";->oo
널 문자는 문자열의 끝을 표시하는 용도로 사용
char형 배열 선언 시 초기화 하면 남은 배열 요소는 자동으로 0이 채워짐
초기화 하지 않은 상태에서 배열 요소를 직접 대입하면 마지막에 널 문자 대입해야 함

널문자의 아스키 코드 값은 0이다.
str[8] = '\0';
str[8] = 0;