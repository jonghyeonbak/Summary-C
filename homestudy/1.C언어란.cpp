C언어
플밍 언어 중 하나

프로그래밍 언어
사람과 컴파일러가 이해할 수 있는 형태의 언어
사람과 컴퓨터간의 대화를 할 수 있게 해주는 '대화수단' 이다.

한국인(한국어, C언어 가능)->컴파일러*(C언어, 기계어* 가능)->컴퓨터(기계어 가능)


컴파일러
컴파일러는 프로그래밍 언어로 작성한 프로그램을 컴퓨터가 이해할 수 있도록 기계어로 번역해주는 역할을 한다.
이렇게 번역하는 일 자체를 '컴파일complie' 이라 한다.

//비쥬얼 스튜디오 다운 방법
//프로젝트 생성 및 소스 파일 작성 방법
//확장자 이름
//컴파일
//디버깅
//실행 파일 실행

컴파일
컴파일러가 하는 일

*기계어(Machine Language)란 ?
컴퓨터가 이해할 수 있는 0과 1로 구성된 언어체계이다.

C언어의 역사
1971년 UNIX 운영체제 개발을 위해 데니스 리치와 켄 탐슨이 설계한 고급언어이다.
기존의 UNIX는 '어셈블리어'라는 저금언어로 만들어져 있었다.

이름이 C언어인 이유 ?
ALGOL 60(1960) - CPL(1963) - BCPL(1969) - B(1970) - C(1971)
위와 같이 B언어 이후에 만들어져서 C언어로 짓게 되었다.


기존의 UNIX라는 운영체제는 '어셈블리*(assembly) 언어라는 저급언어*(low-level)을 사용해서 만들었기 때문에,
하드웨어의 의존도가 높았다. - > 인텔 CPU의 종류에 따라 프로그램을 다시 작성해야 했다.

위 문제점을 C언어가 해결해주어 UNIX 운영체제의 90 % 이상이 C언어로 대체되고, C언어가 인기를 끌게 되었다.

어셈블리어(assembly language)
어려운 기계어를 사람이 이해하기 쉬운 기호로 나타낸 언어

고급 언어(low - level) - 사람이 이해하기 쉬운 언어
저급 언어(high - level) - 컴퓨터가 이해하기 쉬운 언어

C언어의 특징 및 장점
1.절차 지향적 특성
'정해진 순서의 실행흐름'을 중시한다는 의미가 담겨있다.
2.프로그램의 이식성 좋음
CPU의 종류와 상관없이 실행이 가능하다.
3.C언어로 구현된 프로그램은 좋은 성능을 보인다.
메모리 사용량을 줄일 수 있고, 속도를 저하시키는 요소들을 최소화한 언어이다.
BUT 어떻게 만드느냐에 따라 성능이 달라진다.
4.함수를 사용해서 개별 프로그래밍 가능
개발 과정에서 에러를 쉽게 수정, 개발 된 후에도 유지보수에 도움.
잘 만들어진 함수는 새로운 프로그램 개발에 재활용

프로그램이란?
일의 순서

프로그램 실행 과정
코드 작성 ->전처리(#include) -> 컴파일(고급 언어를 어셈블리어로 번역) - >  어셈블러(기계어로 번역) -> 링크 -> 실행파일 생성

소스파일 -> 1.전처리기 ->전처리된 소스파일 -> 2.컴파일 -> 개체파일 ->3.링크 -> 실행파일
														startup code

전처리prerocess과정
전처리 지시자에 따라 소스 파일을 가공하는 과정.

컴파일
전처리가 끝난 파일을 컴파일하면 개체 파일(object file)이 생성된다. 이는 cpu가 해석할 수 있는 명령어(instruction)들로
이뤄진 기계어 파일이지만 바로 실행하는 것은 불가능하다. 프로그램은 운영체제 os(operationg system)에 의해 실행되므로
설치된 운영체제가 인식할 수 있는 형태로 바꿔야 하기 때문이다.

링크
개체파일에 startup code를 결합하는 과정을 수행하는 데 이 과정을 링크라 한다.

개체
소스코드
사용자가 작성한 코드로, 컴파일러에 의해 번역되지 않은 상태의 프로그램 파일 (.c)

소스파일
c언어로 작성한 문서

코딩
소스코드를 만들어가는 과정

컴파일러에서 프로그램 작성 방법
1.작업 공간 마련
2.소스 파일의 생성
3.소스코드의 입력과 컴파일

C프로그램을 이루는 파일의 종류
소스파일
헤더파일